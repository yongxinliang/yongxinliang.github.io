<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Compose Docs</title>
    <link>https://yongxinliang.github.io/docs/compose/</link>
    <description>Recent content on Compose Docs</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://yongxinliang.github.io/docs/compose/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mark Daily Master</title>
      <link>https://yongxinliang.github.io/docs/compose/defaultchangelist/</link>
      <pubDate>Sun, 21 May 2023 23:58:24 +0800</pubDate>
      
      <guid>https://yongxinliang.github.io/docs/compose/defaultchangelist/</guid>
      <description>2023.5.27 国内经济核心问题 国家对私企的态度 国家对互联网企业的定位 国家对房地产、百姓财富的态度，如何软着陆？ 出口问题 2023.5.27 目前国内行情感悟 治大国如烙大饼，百姓命如草芥，唯贪官与“专家”橫行，颠倒黑白，真乃倒反天罡之世界。
2023.6.1 润 4个月了。
2023.6.2 It is time to leave.
2023.6.4 资产负债表衰退 中国国企占据国内80%社会资源 中国中产阶级：高于70%与房产绑定 城投公司债台高筑--&amp;gt;当地农商行转移 IT行业本身，属于国外资本，对于该行业的发展，国家会加大打击力度或控制其发展，例如：阿里巴巴，字节跳动等成立党支部的举措。 Self Position A Man , not a Flunkey. An Enginer ,not a Coder. Ideal Target At least，for the more. Note 6/8 虽对所处环境有所抱怨，这个狗屎一样的社会，的确，但换个角度，谁有敢说自己干净？身边的每个人，包括亲戚、朋友、乃至自己，谁又不是在妥协，向这个垃圾世道低头；说来也怪自己，一直没有去死的勇气，要不怎么会允许周边老狗子在身边作威作福，肯定是，原因出在自己身上。 Note 6/10 越无知的人越自信，读书越多，怕的事也越多。 Note 6/14 WEB应用，即Java应用，通常WEB后端的工作就是提供“接口”，WEB前端则画页面，在这种模式下提供各式各样的WEB服务应用。而任何事物都有它的发展规律，如今数以千万计的WEB项目早已落地而起，在此过程里，随之也诞生了众多的“封装工具”，三方应用，脚手架，低代码平台等，此刻不是那个重复造轮子的年代，而是有了学不完的轮子。而回归WEB本身，人们逐渐的不再重视这个“制造过程”本身，而向业务靠拢(开发并不希望这样)，人人本着反正这个过程会愈发廉价，而干这件事人也会更加不值钱(如今不知饱和，而且泛滥)，对于Coder，既已不值钱便不好挣钱，风口已去，把握方向才是最终归路。 我一直认为，无论是以前应用爆发时代，还是现在应用白菜化时代，最核心的东西一直没变，那就是数据，数据才是永远的核心(从SSH时代就是这样理解)，面向对象，面向服务，都不及面向“DB”，应用无论多烂，都可以重构，付出的也就是一点人力，而数据没了，就可能去死。应用应用，多复杂也是给人用的，人如此，市场如此，方向也就如此。 正所谓语言永远成为不了核心，万事万物皆数据(不是对象)，在大数据时代，公司企业采集的并不是数据本身，而是人的行为，人的本性，分析数据，即分析人性。谁让钱越来越不好赚，这当然也是其一手段。任何一种技术的发展不是技术本身的发展，而是市场行为，即人的行为。所以适当做出抉择，变更方向，才能比人先行。选择比努力重要，没人比谁付出的多(也不愿意去比)，而是以“付出少收获大”为目标，毕竟都是奔着钱去的。 对于自身的定位，目前已经由开发转为“运维开发”，这意味着不再是从0到1的阶段(也意味着传统开发岗位收到了冲击)，而是1+，这是无奈，也是转变，而自己被动的接受了这一变化；对于纯developer，要想化被动为主动，首要广度优先，深度为辅，自己安排好过被安排，有的选才有进退空间，而不是在一个方向上被别人卷。 Note 6/19 身处这个社会，一些常规手段无法保证自身能够生存下去，尤其在一些极端的情况，需要采取一些极端的行为才行。 Note 6/21 妈，我想清楚了，还是要去争，把咱们的东西拿回来，无论付出什么代价，你在天上看着，保佑我，我会尽我的全力，否则就是对不起你，我肯定不会原谅我自己。尽管我万般不想面对老狗，但已经没有妥协的余地了。 妈，你知道吗，你的弱点就是心软，对别人心软就是对自己残忍，我绝对不会重蹈你的覆辙，我要让那些伤害过你的人，付出代价。。。你之前和我说，让我善待老狗，但现在老狗和姓梁的狗杂碎一起对付我，我没有办法听你的话了，我一定要让老狗为他的行为付出代价。 Note 6/22 这世道，就连狗都觉得我不能拿它怎么样，咱们走着瞧。 Note 6/23 有心杀贼，无力回天。 往后余生，已是死人 往后的日常多锻炼胆量，已是将死之人，随时做好了赴死的准备，不该还有惧怕。 Note 6/24 妈,我尽力了,然老狗执迷不悟,三天下来毫无进展,但初始目的略有体现,用她的话,&amp;#34;给她吃了个苍蝇&amp;#34;,恶心了她一回。 我今天才认清她，我所谓的“奶奶”，是个极其自私的人，原来我的阻力不光是老狗，还有她，她压根不在乎所谓的儿子、孙子，她不在乎别人的家庭是否被破坏，她心中考虑的只有自己。 Note 6/25 我没想到，我能让老逼和老狗逼到这个地步。 Note 6/29 不要为群众的利益出头，群众的眼睛是瞎的。 Note 6/30 有些人，为什么明明错了也可以理直气壮?</description>
    </item>
    
    <item>
      <title>Install theme</title>
      <link>https://yongxinliang.github.io/docs/compose/install-theme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yongxinliang.github.io/docs/compose/install-theme/</guid>
      <description>Prerequisites First ensure that you have hugo installed.
You need a recent extended version (we recommend version 0.61 or later) of Hugo to do local builds and previews of sites (like this one) that uses this theme.
If you install from the release page, make sure to get the extended Hugo version, which supports sass; you may need to scroll down the list of releases to see it.
For comprehensive Hugo documentation, see gohugo.</description>
    </item>
    
    <item>
      <title>Use forestry CMS</title>
      <link>https://yongxinliang.github.io/docs/compose/use-forestry-cms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yongxinliang.github.io/docs/compose/use-forestry-cms/</guid>
      <description>Do you prefer managing your site using a CMS? Or would you like to make it easier for someone (a non-techie, perhaps) in your team to make edits easily? If interested, follow along. Else, skip to the next section
Let&#39;s sync your site with forestry CMS.
Prerequisites !! Obviously you ought to have a github account. This is where your website source will live. Basically, forestry will read from github and write (commmit) to your github repo.</description>
    </item>
    
    <item>
      <title>Content organization</title>
      <link>https://yongxinliang.github.io/docs/compose/organize-content/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yongxinliang.github.io/docs/compose/organize-content/</guid>
      <description>This theme is primarily meant for documentation.
Documentation By default, the theme will look for all your documentation content within the docs directory.
However, if you would like to have your docs content across multiple directories, please list those directories inside config/_default/params.toml under docSections like so:
...docSections = [&amp;#34;docs&amp;#34;, &amp;#34;tutorials&amp;#34;]... Unlike other regular pages, the documentation pages will have a left sidebar. This sidebar will list links to all the pages in the documentation pages.</description>
    </item>
    
    <item>
      <title>Shortcodes</title>
      <link>https://yongxinliang.github.io/docs/compose/shortcodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yongxinliang.github.io/docs/compose/shortcodes/</guid>
      <description>Instead of writing all your site pages from scratch, Hugo lets you define and use shortcodes.
Why shortcodes? While markdown is sufficient to produce simple pages, it&#39;s insufficient where complex page structures are needed. Thusly, whenever we need special styling, shortcodes compliment the shortcomings of markdown.
This way, you can side step complex html and css boilerplate in your content files.
Sometimes, the shortcode will wrap content, sometimes it won&#39;t. When content is wrapped, a closing shortcode tag is needed.</description>
    </item>
    
    <item>
      <title>Search Function</title>
      <link>https://yongxinliang.github.io/docs/compose/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yongxinliang.github.io/docs/compose/search/</guid>
      <description>Firstly, ensure you have these lines inside your config.toml file
1[outputs] 2 home = [&amp;#34;HTML&amp;#34;, &amp;#34;RSS&amp;#34;,&amp;#34;JSON&amp;#34;] Compose implements Fuse js or Algolia to enable search functionality. By default Fuse is applied. Algolia can be enabled by adding this settings to config/_default/params.toml file
1# search 2[search] 3on = true 4global = false 5[search.algolia] 6enable = false # if false search will default to fusejs 7id = &amp;#34;Q40WQQX84U&amp;#34; # Application ID 8index = &amp;#34;compose&amp;#34; # Index name 9key = &amp;#34;da87401a458102ec6bbd6cc5e5cf8d95&amp;#34; # Search-Only API Key Both search engines will display results using the same UI.</description>
    </item>
    
    <item>
      <title>Mermaid</title>
      <link>https://yongxinliang.github.io/docs/compose/mermaid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yongxinliang.github.io/docs/compose/mermaid/</guid>
      <description>Mermaid is library that helps you generate diagrams, flowcharts, and piecharts from text in a similar manner as markdown.
With compose theme, you can use mermaid using a custom shortcode as follows:
Sequence Diagrams Syntax
1{{&amp;lt; mermaid &amp;gt;}} 2sequenceDiagram 3 participant Alice 4 participant Bob 5 Alice-&amp;gt;&amp;gt;John: Hello John, how are you? 6 loop Healthcheck 7 John-&amp;gt;&amp;gt;John: Fight against hypochondria 8 end 9 Note right of John: Rational thoughts&amp;lt;br/&amp;gt;prevail... 10 John--&amp;gt;&amp;gt;Alice: Great!</description>
    </item>
    
    <item>
      <title>Graphs, charts &amp; dynamic tables</title>
      <link>https://yongxinliang.github.io/docs/compose/graphs-charts-tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yongxinliang.github.io/docs/compose/graphs-charts-tables/</guid>
      <description>Using chart js library you can display data you have stored in a csv file as a pie chart, bar graph or doughnut chart.
At this point if you want to display data from a json or yaml file, you would need to convert it into csv first. Else the template will error out.
Once you have a csv file, you display the charts as follows:
Show a pie, doughnut &amp;amp; bar chart at once Firstly define the data you want to display from the front matter:</description>
    </item>
    
    <item>
      <title>Customize layouts &amp; components</title>
      <link>https://yongxinliang.github.io/docs/compose/customize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yongxinliang.github.io/docs/compose/customize/</guid>
      <description>Shortcodes modifiers These modifiers are classes you can use with shortcodes to customize the look and feel of your layouts and components.
Grid modifier space grid-2 2 columns grid-3 3 columns grid-4 4 columns Spacing modifier space mt-1 1.5rem top margin mt-2 3rem top margin mt-3 4.5rem top margin mt-4 6rem top margin use pt-1 ~ pt-4 for top padding
modifier space mb-1 1.5rem bottom margin mb-2 3rem bottom margin mb-3 4.</description>
    </item>
    
    <item>
      <title>Leverage Github actions</title>
      <link>https://yongxinliang.github.io/docs/compose/github-actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yongxinliang.github.io/docs/compose/github-actions/</guid>
      <description>This theme ships with 2 github actions inside the exampleSite folder:
AWS CI Algolia CI AWS CI This helps you to autodeploy your hugo website from github to an AWS s3 bucket. Set the secrets in the action accordingly and voila.
Algolia CI This action will automatically update your algolia search index. No extra npm manual setup will be needed.
These actions are customizable to fire off under your specified set of circumstances.</description>
    </item>
    
    <item>
      <title>View Life</title>
      <link>https://yongxinliang.github.io/docs/compose/viewlive/</link>
      <pubDate>Wed, 27 Sep 2023 23:35:03 +0800</pubDate>
      
      <guid>https://yongxinliang.github.io/docs/compose/viewlive/</guid>
      <description>View Records Date View Comments 2023.9.27 L: 725 DC:50 R: 725 DC 50 1.左眼黄斑异常2.豹纹明显(眼轴27)3.叶黄素偏低 2024.3.27 L: 725 DC:50 R: 725 DC 50 total 1 times </description>
    </item>
    
    <item>
      <title>Summary of Life</title>
      <link>https://yongxinliang.github.io/docs/compose/summaryoflife/</link>
      <pubDate>Sat, 17 Jun 2023 23:35:03 +0800</pubDate>
      
      <guid>https://yongxinliang.github.io/docs/compose/summaryoflife/</guid>
      <description>2023.5-2023.6 Date Spend Comments 5.10 5000 广州 5.20 6800 南开 5.24 400 SPA 5.31 57 SPA 6.9 148 SPA 6.11 340 SPA 6.16 142 SPA 6.17 698 SPA 6.22 227 SPA 6.24 398 SPA 7.1 398+180+1000(1578) 罗娟 7.7 1500+175+95(1770) 沈双 7.14 736 Final 7.27 1486 沐禾 8.4 2000 罗娟 8.12 169 SPA 8.19 132 SPA 8.26 348 SPA 8.28 199+173 SPA total 22801 target 95% 24000 </description>
    </item>
    
  </channel>
</rss>
